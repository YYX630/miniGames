{"version":3,"sources":["game1.js","game2.js","App.js","index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Historyblock","moves","showhistory","calculateWinner","lines","length","a","b","c","Game1","status","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","setShow","current","winner","map","step","move","desc","jumpTo","newHistory","slice","concat","handleClick","Button","j","console","log","moveUp","newSquares","col","row","flg","tmp","moveDown","moveLeft","moveRight","randomcell","getRandomint","min","max","Math","ceil","floor","random","Game2","setSquares","key","onKeyDown","e","keyCode","handleKeyDown","App","game","setGame","class","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3c0c4dd.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './game1.css';\n\n\n\n\n\nfunction Square(props){\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\n\n\nfunction Board (props){\n  \n  function renderSquare(i){\n    return (\n      <Square \n        value={props.squares[i]}\n        onClick={()=>props.onClick(i)}\n      />\n    );\n  };\n\n  return (\n      <div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n  );\n}\n\n\nfunction Historyblock ({moves, showhistory, onClick}){\n\n  if (showhistory){\n    return (\n      <div>\n          <button onClick={()=>onClick(0)} >履歴を隠す</button>\n          <ol>{moves}</ol>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n          <button  onClick={()=>onClick(1)} >履歴を見る</button>\n      </div>\n    ) \n  }\n\n}\n\n\nfunction Game1 (props) {\n  const [history,setHistory] = useState([{squares: Array(9).fill(null)}])\n  const [stepNumber, setStepNumber] = useState(0)\n  const [xIsNext, setXIsNext] = useState(true);\n  const [showhistory, setShow] = useState(0);\n\n\n  const handleShow = (i) => {\n    setShow(i)\n  }\n\n\n  const handleClick = (i) => {\n\n    // 新しくコピー。\n    let newHistory = history.slice(0, stepNumber+1);\n    let current = newHistory[newHistory.length-1];\n    let squares = current.squares.slice();\n    if (calculateWinner(squares)|| squares[i]){\n      return;\n    }\n    //  勝負がすでについていたら、もしくはすでに押されているマスを押しても何も起きない。\n    \n    // そうでなければ。\n    \n    // 新しく作成したコピーに変更を反映\n    squares[i] = xIsNext ? 'X': 'O';\n\n\n\n    // historyに新しいコピーを結合\n    setHistory(newHistory.concat([{\n      squares: squares,\n    }]))\n    setStepNumber(newHistory.length)\n    setXIsNext(!xIsNext)\n\n  }\n\n\n  const jumpTo = (step)=>{\n    setStepNumber(step)\n    setXIsNext((step%2)=== 0 )\n  }\n\n\n\n\n    let current = history[stepNumber];\n    let winner = calculateWinner(current.squares);\n\n    const moves = history.map((step,move)=>{\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={()=>jumpTo(move)}> {desc} </button>\n        </li>\n      );\n    });\n\n\n\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i)=>handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <Historyblock moves ={moves} showhistory={showhistory} onClick={handleShow}/>\n        </div>\n      </div>\n    );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game1;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './game1.css';\n\n\nfunction Square(props){\n    let value;\n    if(props.value===0){\n        value = null;\n    } else {\n        value = props.value;\n    }\n\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n        {value}\n        </button>\n    )\n}\n\n\nfunction Button(props){\n    return (\n        <div>\n            <button  onClick={()=>props.onClick(0)}>\n                ↑\n            </button>\n            <button onClick={()=>props.onClick(1)}>\n                ↓\n            </button>\n            <button  onClick={()=>props.onClick(3)}>\n                ←\n            </button>\n            <button  onClick={()=>props.onClick(2)}>\n                →\n            </button>\n        </div>\n\n    )\n}\n\n\nfunction Board (props){\n    console.log(props.squares);\n  function renderSquare(i,j){\n    return (\n      <Square \n        value={props.squares[i][j]}\n      />\n    );\n  };\n\n  return (\n      <div>\n        <div className=\"board-row\">\n          {renderSquare(0,0)}\n          {renderSquare(0,1)}\n          {renderSquare(0,2)}\n          {renderSquare(0,3)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(1,0)}\n          {renderSquare(1,1)}\n          {renderSquare(1,2)}\n          {renderSquare(1,3)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(2,0)}\n          {renderSquare(2,1)}\n          {renderSquare(2,2)}\n          {renderSquare(2,3)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3,0)}\n          {renderSquare(3,1)}\n          {renderSquare(3,2)}\n          {renderSquare(3,3)}\n        </div>\n      </div>\n  );\n}\n\n\n\nfunction Game2 (props) {\n\n    const [squares, setSquares] = useState([\n        [0,0,0,0],\n        [0,0,0,0],\n        [0,0,0,0],\n        [0,0,0,0],\n    ])\n\n    const handleClick = (key) => {\n\n        let newSquares = [];\n        for (let i =0; i<squares.length; i++){\n            newSquares[i] = squares[i].slice();\n        }\n    \n    \n        if (key ===0) moveUp(newSquares);\n        if (key ===1) moveDown(newSquares);\n        if (key ===2) moveRight(newSquares);\n        if (key ===3) moveLeft(newSquares);\n        randomcell(newSquares);\n        setSquares(newSquares);\n    }\n\n    const handleKeyDown = (e) =>{\n        let newSquares = [];\n        for (let i =0; i<squares.length; i++){\n            newSquares[i] = squares[i].slice();\n        }\n\n        if(e.keyCode === 38) moveUp(newSquares);\n        if(e.keyCode === 39) moveRight(newSquares);\n        if(e.keyCode === 40) moveDown(newSquares);\n        if(e.keyCode === 37) moveLeft(newSquares);\n\n        randomcell(newSquares);\n        setSquares(newSquares);\n    }\n    \n\n\n\n    return (\n      <div className=\"game\" >\n        <div className=\"game-board\">\n          <Board \n            squares={squares}\n          />\n        </div>\n        <div className=\"game-info\">\n          <Button\n            squares={squares}\n            onClick={(key)=>handleClick(key)}\n          />\n          <button onKeyDown={(e) => handleKeyDown(e)}>キーボード入力モード</button>\n        </div>\n      </div>\n    );\n}\n\nfunction moveUp(newSquares){\n    for (let col = 0; col < 4 ; col++){\n        for (let row = 1 ; row < 4; row++){\n            if(newSquares[row][col] === 0){\n                continue;\n            } else {\n                // newSquares[row][col]に数字が入っているとき\n\n                // 上にかぶる数字あるか\n                let i;\n                let flg=0;\n                for (i = row-1 ; i>=0; i=i-1){\n\n                    if(newSquares[i][col]===0){\n                        continue;\n                    } else if(newSquares[i][col]!==newSquares[row][col]){\n                        flg = 0;\n                        // 上にあるのは同じ数字ではない\n                        break;\n                    } else if(newSquares[i][col]===newSquares[row][col]){\n                        flg = 1;\n                        // 上にあるのは同じ数字\n                        break;\n                    }\n                }\n                // 上にある数字とかぶるとき。\n                if(flg===1){ \n                    newSquares[i][col] = newSquares[i][col]*2;\n                    newSquares[row][col]=0;\n\n                } else {\n                    let tmp = newSquares[row][col];\n                    newSquares[row][col] = 0;\n                    newSquares[i+1][col] = tmp;\n                    // 個々の操作の順番大事。逆にしてはいけない。消してから、写す。\n                    // i+1 == rowの時があるから。\n                 }\n            }\n        }\n\n    }\n}\n\nfunction moveDown(newSquares){\n    for (let col = 0; col < 4 ; col++){\n        \n\n        for (let row = 4-2 ; row >= 0; row--){\n            if(newSquares[row][col] === 0){\n                continue;\n            } else {\n                // newSquares[row][col]に数字が入っているとき\n\n                //下にかぶる数字あるか\n                let i;\n                let flg=0;\n                for (i = row+1 ; i<=4-1; i=i+1){\n                    if(newSquares[i][col]===0){\n                        continue;\n                    } else if(newSquares[i][col]!==newSquares[row][col]){\n                        flg = 0;\n                        // 下にあるのは同じ数字ではない\n                        break;\n                    } else if(newSquares[i][col]===newSquares[row][col]){\n                        flg = 1;\n                        // 下にあるのは同じ数字\n                        break;\n                    }\n                }\n\n                // 下にある数字とかぶるとき。\n                if(flg){\n                    newSquares[i][col] = newSquares[i][col]*2;\n                    newSquares[row][col]=0;\n                } else {\n                    // 下にある数字とかぶらないとき\n                    let tmp = newSquares[row][col];\n                    newSquares[row][col] = 0;\n                    newSquares[i-1][col] = tmp;\n                    // 個々の操作の順番大事。逆にしてはいけない。消してから、写す。\n                    // i-1 == rowの時があるから。\n                 }\n            }\n        }\n\n    }\n}\n\n\nfunction moveLeft(newSquares){\n    for (let row = 0; row < 4 ; row++){\n        \n\n        for (let col = 1 ; col < 4; col++){\n            if(newSquares[row][col] === 0){\n                continue;\n            } else {\n                // newSquares[row][col]に数字が入っているとき\n\n                // 左にかぶる数字あるか\n                let i;\n                let flg=0;\n                for (i = col-1 ; i>=0; i=i-1){\n                    if(newSquares[row][i]===0){\n                        continue;\n                    } else if(newSquares[row][i]!==newSquares[row][col]){\n                        flg = 0;\n                        // 左にあるのは同じ数字ではない\n                        break;\n                    } else if(newSquares[row][i]===newSquares[row][col]){\n                        flg = 1;\n                        // 左にあるのは同じ数字\n                        break;\n                    }\n                }\n\n                // 左にある数字とかぶるとき。\n                if(flg){\n                    newSquares[row][i] = newSquares[row][i]*2;\n                    newSquares[row][col]=0;\n                    // limit = limit;\n                } else {\n                    //　上にある数字とかぶらない時のみlimitを使う。\n                    let tmp = newSquares[row][col];\n                    newSquares[row][col] = 0;\n                    newSquares[row][i+1] = tmp;\n                    // 個々の操作の順番大事。逆にしてはいけない。消してから、写す。\n                    // i+1 == colの時があるから。\n                 }\n            }\n        }\n\n    }\n}\n\n\nfunction moveRight(newSquares){\n    for (let row = 0; row < 4 ; row++){\n        \n\n        for (let col = 4-2 ; col >= 0; col--){\n            if(newSquares[row][col] === 0){\n                continue;\n            } else {\n                // newSquares[row][col]に数字が入っているとき\n\n                //右にかぶる数字あるか\n                let i;\n                let flg=0;\n                for (i = col+1 ; i<=4-1; i=i+1){\n                    if(newSquares[row][i]===0){\n                        continue;\n                    } else if(newSquares[row][i]!==newSquares[row][col]){\n                        flg = 0;\n                        // 右にあるのは同じ数字ではない\n                        break;\n                    } else if(newSquares[row][i]===newSquares[row][col]){\n                        flg = 1;\n                        // 右にあるのは同じ数字\n                        break;\n                    }\n                }\n\n                // 右にある数字とかぶるとき。\n                if(flg){\n                    newSquares[row][i] = newSquares[row][i]*2;\n                    newSquares[row][col]=0;\n                } else {\n                    // 下にある数字とかぶらないとき\n                    let tmp = newSquares[row][col];\n                    newSquares[row][col] = 0;\n                    newSquares[row][i-1] = tmp;\n                    // 個々の操作の順番大事。逆にしてはいけない。消してから、写す。\n                    // i-1 == colの時があるから。\n                 }\n            }\n        }\n\n    }\n}\n\n\nfunction randomcell(newSquares){\n    // 最後に。一回押すたびに、2をランダムに出現。\n    let flg =1; \n    function getRandomint(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n      }\n\n    while (flg){\n        let a = getRandomint(0,4); \n        let b = getRandomint(0,4);\n        if (0 === newSquares[a][b]){\n            newSquares[a][b] = 2;\n            break;\n        }\n        flg = flg + 1;\n\n        if(flg>4*4*2){\n            for(let i =0; i<4; i++){\n                for(let j=0; j<4; j++){\n                    newSquares[i][j]=0\n                }\n            }\n            return -1;\n        } \n    }\n    return 0;\n}\n\nexport default Game2;","import React, {useState} from 'react';\nimport Game1 from './game1';\nimport Game2 from './game2';\nimport './css/App.css'; \n\nfunction App(){\n\n  const [game, setGame] = useState(0);\n  \n\n  \n  if (game===0){\n    return (\n      <div className=\"App-header\">\n        <h1 >Start A New Game</h1>\n        <div class=\"btn-border-gradient-wrap\">\n          <button className=\"btn btn-border-gradient\" onClick={()=>{setGame(1)}}>三目並べ</button>\n        </div>\n        <br/>\n        <div class=\"btn-border-gradient-wrap\">\n          <button className=\"btn btn-border-gradient\" onClick={()=>{setGame(2)}}>2048</button>\n        </div>\n      </div>\n    )\n  } else if (game ===1){\n    return (\n      <div className=\"App-header\">\n      <h1 >三目並べ</h1>\n      <div class=\"btn-border-gradient-wrap\">\n      <button href=\"\" className=\"btn btn-border-gradient\" onClick={()=>{setGame(0)}}>ホームに戻る</button>\n      </div>\n      <br/>\n      <Game1/>\n      </div>\n    )\n  } else if (game ===2){\n    return (\n      <div className=\"App-header\">\n      <h1 >2048</h1>\n      <div class=\"btn-border-gradient-wrap\">\n        <button className=\"btn btn-border-gradient\" onClick={()=>{setGame(0)}}>ホームに戻る</button>\n      </div>\n      <br/>\n      <Game2/>\n      </div>\n    )\n\n  }\n\n\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/main.css';\nimport App from './App';\n\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}